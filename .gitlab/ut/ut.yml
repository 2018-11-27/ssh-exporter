masterUt:
  image: $BASE_UT_IMAGE
  stage: ut
  allow_failure: true
  only:
    - master
  tags:
    - mec-runner
  script:
    - |-
      array=(`echo $BASE_CURRENT_PROJECT_MAIN_LANGUAGE | tr ',' ' '` )
      echo "$array"
      for lang in ${array[@]}
      do
        echo "$lang"
        case "$lang" in
        "UnKnown" )
            echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"
            ;;
        "Python" )
            pip3 install tox -i http://pip.lenovo.com/repository/pypi-aliyun/simple/ --trusted-host pip.lenovo.com
            /usr/local/python3/bin/tox
            #sleep 100000
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=./ \
                -Dsonar.tests=./ \
                -Dsonar.test.inclusions=**/*_test.py,**/test_*.py \
                -Dsonar.exclusions=**/*_test.py,**/test_*.py,**/*.xml,assertpy/*.py \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.coveragePlugin=cobertura \
                -Dsonar.python.xunit.reportPath=unit-report.xml
            ;;
        "Go" | "GoLang" )
            export GOPROXY=http://pip.lenovo.com/repository/go-group/
            export GOSUMDB=off
            export GO111MODULE=on
            /usr/local/go/bin/go get -u github.com/jstemmer/go-junit-report
            /usr/local/go/bin/go test \
                -mod=mod \
                -v ./... -json | tee unit-report.json
            /usr/local/go/bin/go get github.com/t-yuki/gocover-cobertura
            /usr/local/go/bin/go mod vendor
            /usr/local/go/bin/go test \
                -v ./... \
                -mod=mod -coverprofile=covprofile
            /usr/local/go/bin/go tool cover \
                -html=covprofile \
                -o coverage.html
            /usr/local/go/pkg/bin/gocover-cobertura <  covprofile  > coverage.xml    -
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=. \
                -Dsonar.exclusions=**/*_test.go \
                -Dsonar.tests=. \
                -Dsonar.test.inclusions=**/*_test.go \
                -Dsonar.go.tests.reportPaths=unit-report.json \
                -Dsonar.go.coverage.reportPaths=covprofile \
                -Dsonar.go.coveragePlugin=cobertura
            ;;
        esac
      done
      echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"

mRUt:
  image: $BASE_UT_IMAGE
  stage: ut
  allow_failure: true
  only:
    - merge_requests
  tags:
    - mec-runner
  script:
    - |-
      array=(`echo $BASE_CURRENT_PROJECT_MAIN_LANGUAGE | tr ',' ' '` )
      echo "$array"
      for lang in ${array[@]}
      do
        echo "$lang"
        case "$lang" in
        "UnKnown" )
            echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"
            ;;
        "Python" )
            pip3 install tox -i http://pip.lenovo.com/repository/pypi-aliyun/simple/ --trusted-host pip.lenovo.com
            /usr/local/python3/bin/tox
            #sleep 100000
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=./ \
                -Dsonar.tests=./ \
                -Dsonar.test.inclusions=**/*_test.py,**/test_*.py \
                -Dsonar.exclusions=**/*_test.py,**/test_*.py,**/*.xml,assertpy/*.py \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.coveragePlugin=cobertura \
                -Dsonar.python.xunit.reportPath=unit-report.xml
            ;;
        "Go" | "GoLang" )
            export GOPROXY=http://pip.lenovo.com/repository/go-group/
            export GOSUMDB=off
            export GO111MODULE=on
            /usr/local/go/bin/go get -u github.com/jstemmer/go-junit-report
            /usr/local/go/bin/go test \
                -mod=mod \
                -v ./... -json | tee unit-report.json
            /usr/local/go/bin/go get github.com/t-yuki/gocover-cobertura
            /usr/local/go/bin/go mod vendor
            /usr/local/go/bin/go test \
                -v ./... \
                -mod=mod -coverprofile=covprofile
            /usr/local/go/bin/go tool cover \
                -html=covprofile \
                -o coverage.html
            /usr/local/go/pkg/bin/gocover-cobertura <  covprofile  > coverage.xml    -
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=. \
                -Dsonar.exclusions=**/*_test.go \
                -Dsonar.tests=. \
                -Dsonar.test.inclusions=**/*_test.go \
                -Dsonar.go.tests.reportPaths=unit-report.json \
                -Dsonar.go.coverage.reportPaths=covprofile \
                -Dsonar.go.coveragePlugin=cobertura
            ;;
        esac
      done
      echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"

othersUt:
  image: $BASE_UT_IMAGE
  stage: ut
  allow_failure: true
  except:
    - master
    - /^staging-.*$/
    - /^release-.*$/
    - merge_requests
  tags:
    - mec-runner
  script:
    - |-
      array=(`echo $BASE_CURRENT_PROJECT_MAIN_LANGUAGE | tr ',' ' '` )
      echo "$array"
      for lang in ${array[@]}
      do
        echo "$lang"
        case "$lang" in
        "UnKnown" )
            echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"
            ;;
        "Python" )
            pip3 install tox -i http://pip.lenovo.com/repository/pypi-aliyun/simple/ --trusted-host pip.lenovo.com
            /usr/local/python3/bin/tox
            #sleep 100000
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=./ \
                -Dsonar.tests=./ \
                -Dsonar.test.inclusions=**/*_test.py,**/test_*.py \
                -Dsonar.exclusions=**/*_test.py,**/test_*.py,**/*.xml,assertpy/*.py \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.coveragePlugin=cobertura \
                -Dsonar.python.xunit.reportPath=unit-report.xml
            ;;
        "Go" | "GoLang" )
            export GOPROXY=http://pip.lenovo.com/repository/go-group/
            export GOSUMDB=off
            export GO111MODULE=on
            /usr/local/go/bin/go get -u github.com/jstemmer/go-junit-report
            /usr/local/go/bin/go test \
                -mod=mod \
                -v ./... -json | tee unit-report.json
            /usr/local/go/bin/go get github.com/t-yuki/gocover-cobertura
            /usr/local/go/bin/go mod vendor
            /usr/local/go/bin/go test \
                -v ./... \
                -mod=mod -coverprofile=covprofile
            /usr/local/go/bin/go tool cover \
                -html=covprofile \
                -o coverage.html
            /usr/local/go/pkg/bin/gocover-cobertura <  covprofile  > coverage.xml    -
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=. \
                -Dsonar.exclusions=**/*_test.go \
                -Dsonar.tests=. \
                -Dsonar.test.inclusions=**/*_test.go \
                -Dsonar.go.tests.reportPaths=unit-report.json \
                -Dsonar.go.coverage.reportPaths=covprofile \
                -Dsonar.go.coveragePlugin=cobertura
            ;;
        esac
      done
      echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"


#releaseUt:
#  image: $BASE_UT_IMAGE
#  stage: ut
#  allow_failure: true
#  only:
#    - /^release-.*$/
#  tags:
#    - mec-runner
#  script:
#    - |-
#      array=(`echo $BASE_CURRENT_PROJECT_MAIN_LANGUAGE | tr ',' ' '` )
#      echo "$array"
#      for lang in ${array[@]}
#      do
#        echo "$lang"
#        case "$lang" in
#        "UnKnown" )
#            echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"
#            ;;
#        "Python" )
#            pip3 install tox -i http://pip.lenovo.com/repository/pypi-aliyun/simple/ --trusted-host pip.lenovo.com
#            /usr/local/python3/bin/tox
#            #sleep 100000
#            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
#                -Dsonar.projectVersion=$CI_COMMIT_SHA \
#                -Dsonar.projectName=$CI_PROJECT_PATH \
#                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
#                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
#                -Dsonar.host.url=http://isonar.lenovo.com \
#                -Dsonar.sourceEncoding=UTF-8 \
#                -Dsonar.sources=./ \
#                -Dsonar.tests=./ \
#                -Dsonar.test.inclusions=**/*_test.py,**/test_*.py \
#                -Dsonar.exclusions=**/*_test.py,**/test_*.py,**/*.xml,assertpy/*.py \
#                -Dsonar.python.coverage.reportPaths=coverage.xml \
#                -Dsonar.python.coveragePlugin=cobertura \
#                -Dsonar.python.xunit.reportPath=unit-report.xml
#            ;;
#        "Go" | "GoLang" )
#            export GOPROXY=http://pip.lenovo.com/repository/go-group/
#            export GOSUMDB=off
#            export GO111MODULE=on
#            /usr/local/go/bin/go get -u github.com/jstemmer/go-junit-report
#            /usr/local/go/bin/go test \
#                -mod=mod \
#                -v ./... -json | tee unit-report.json
#            /usr/local/go/bin/go get github.com/t-yuki/gocover-cobertura
#            /usr/local/go/bin/go mod vendor
#            /usr/local/go/bin/go test \
#                -v ./... \
#                -mod=mod -coverprofile=covprofile
#            /usr/local/go/bin/go tool cover \
#                -html=covprofile \
#                -o coverage.html
#            /usr/local/go/pkg/bin/gocover-cobertura <  covprofile  > coverage.xml    -
#            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
#                -Dsonar.projectVersion=$CI_COMMIT_SHA \
#                -Dsonar.projectName=$CI_PROJECT_PATH \
#                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
#                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
#                -Dsonar.host.url=http://isonar.lenovo.com \
#                -Dsonar.sourceEncoding=UTF-8 \
#                -Dsonar.sources=. \
#                -Dsonar.exclusions=**/*_test.go \
#                -Dsonar.tests=. \
#                -Dsonar.test.inclusions=**/*_test.go \
#                -Dsonar.go.tests.reportPaths=unit-report.json \
#                -Dsonar.go.coverage.reportPaths=covprofile \
#                -Dsonar.go.coveragePlugin=cobertura
#            ;;
#        esac
#      done
#      echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"

stagingUt:
  image: $BASE_UT_IMAGE
  stage: ut
  allow_failure: true
  only:
    - /^staging-.*$/
  tags:
    - mec-runner
  script:
    - |-
      array=(`echo $BASE_CURRENT_PROJECT_MAIN_LANGUAGE | tr ',' ' '` )
      echo "$array"
      for lang in ${array[@]}
      do
        echo "$lang"
        case "$lang" in
        "UnKnown" )
            echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"
            ;;
        "Python" )
            pip3 install tox -i http://pip.lenovo.com/repository/pypi-aliyun/simple/ --trusted-host pip.lenovo.com
            /usr/local/python3/bin/tox
            #sleep 100000
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=./ \
                -Dsonar.tests=./ \
                -Dsonar.test.inclusions=**/*_test.py,**/test_*.py \
                -Dsonar.exclusions=**/*_test.py,**/test_*.py,**/*.xml,assertpy/*.py \
                -Dsonar.python.coverage.reportPaths=coverage.xml \
                -Dsonar.python.coveragePlugin=cobertura \
                -Dsonar.python.xunit.reportPath=unit-report.xml
            ;;
        "Go" | "GoLang" )
            export GOPROXY=http://pip.lenovo.com/repository/go-group/
            export GOSUMDB=off
            export GO111MODULE=on
            /usr/local/go/bin/go get -u github.com/jstemmer/go-junit-report
            /usr/local/go/bin/go test \
                -mod=mod \
                -v ./... -json | tee unit-report.json
            /usr/local/go/bin/go get github.com/t-yuki/gocover-cobertura
            /usr/local/go/bin/go mod vendor
            /usr/local/go/bin/go test \
                -v ./... \
                -mod=mod -coverprofile=covprofile
            /usr/local/go/bin/go tool cover \
                -html=covprofile \
                -o coverage.html
            /usr/local/go/pkg/bin/gocover-cobertura <  covprofile  > coverage.xml    -
            /usr/local/sonar-scanner-4.4.0/bin/sonar-scanner \
                -Dsonar.projectVersion=$CI_COMMIT_SHA \
                -Dsonar.projectName=$CI_PROJECT_PATH \
                -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_PROJECT_ID \
                -Dsonar.branch.name=$CI_COMMIT_REF_NAME \
                -Dsonar.host.url=http://isonar.lenovo.com \
                -Dsonar.sourceEncoding=UTF-8 \
                -Dsonar.sources=. \
                -Dsonar.exclusions=**/*_test.go \
                -Dsonar.tests=. \
                -Dsonar.test.inclusions=**/*_test.go \
                -Dsonar.go.tests.reportPaths=unit-report.json \
                -Dsonar.go.coverage.reportPaths=covprofile \
                -Dsonar.go.coveragePlugin=cobertura
            ;;
        esac
      done
      echo "$CI_COMMIT_REF_SLUG in $CI_PROJECT_URL  Unit Test Stage Is Successfully!"
